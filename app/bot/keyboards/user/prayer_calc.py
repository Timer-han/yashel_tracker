from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_male_calculation_method_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ—Ç–æ–¥–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è –º—É–∂—á–∏–Ω"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üìÖ –ó–Ω–∞—é –¥–∞—Ç—É —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è", 
        callback_data="male_know_maturity"
    ))
    builder.add(InlineKeyboardButton(
        text="‚úã –í–≤–µ–¥—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä—É—á–Ω—É—é", 
        callback_data="male_manual"
    ))
    builder.add(InlineKeyboardButton(
        text="üéì –•–æ—á—É –Ω–∞—É—á–∏—Ç—å—Å—è —Å—á–∏—Ç–∞—Ç—å —Å–∞–º!", 
        callback_data="male_learn"
    ))
    
    builder.adjust(1)
    return builder.as_markup()

def get_female_calculation_method_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ—Ç–æ–¥–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="‚úã –í–≤–µ–¥—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä—É—á–Ω—É—é", 
        callback_data="female_manual"
    ))
    builder.add(InlineKeyboardButton(
        text="üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–π –≥–∞–π–¥ –ø–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—é", 
        callback_data="female_guide"
    ))
    builder.add(InlineKeyboardButton(
        text="üìÖ –ó–Ω–∞—é –¥–∞—Ç—É —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è", 
        callback_data="female_know_maturity"
    ))
    builder.add(InlineKeyboardButton(
        text="ü§î –ù–µ –ø–æ–º–Ω—é –¥–∞—Ç—É —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è", 
        callback_data="female_no_maturity"
    ))
    
    builder.adjust(1)
    return builder.as_markup()

def get_yes_no_keyboard(yes_callback: str, no_callback: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=yes_callback))
    builder.add(InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=no_callback))
    
    builder.adjust(2)
    return builder.as_markup()

def get_births_count_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–¥–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    for i in range(1, 8):  # 1-7 —Ä–æ–¥–æ–≤
        builder.add(InlineKeyboardButton(text=str(i), callback_data=f"births_count_{i}"))
    
    builder.add(InlineKeyboardButton(text="8+ (–≤–≤–µ—Å—Ç–∏)", callback_data="births_count_manual"))
    
    builder.adjust(4, 4)
    return builder.as_markup()

def get_miscarriages_count_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–∫–∏–¥—ã—à–µ–π"""
    builder = InlineKeyboardBuilder()
    
    for i in range(1, 7):  # 1-5 –≤—ã–∫–∏–¥—ã—à–µ–π
        builder.add(InlineKeyboardButton(text=str(i), callback_data=f"miscarriages_count_{i}"))
    
    builder.add(InlineKeyboardButton(text="6+ (–≤–≤–µ—Å—Ç–∏)", callback_data="miscarriages_count_manual"))
    
    builder.adjust(3, 3, 1)
    return builder.as_markup()

def day_case_russian (count: int) -> str:
    return "–¥–Ω–µ–π" if 10 <= count % 100 <= 20 or 5 <= count % 10 <= 9 else "–¥–Ω—è"

def get_hayd_duration_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ö–∞–π–¥–∞"""
    builder = InlineKeyboardBuilder()
    
    common_values = [3, 4, 5, 6, 7, 8, 9, 10]
    for days in common_values:
        builder.add(InlineKeyboardButton(text=f"{days} {day_case_russian(days)}", callback_data=f"hayd_days_{days}"))
    
    # builder.add(InlineKeyboardButton(text="–î—Ä—É–≥–æ–µ (–≤–≤–µ—Å—Ç–∏)", callback_data="hayd_days_manual"))
    
    builder.adjust(4, 4)
    return builder.as_markup()

def get_nifas_duration_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∏—Ñ–∞—Å–∞"""
    builder = InlineKeyboardBuilder()
    
    common_values = [15, 20, 25, 30, 35, 40]
    for days in common_values:
        builder.add(InlineKeyboardButton(text=f"{days} –¥–Ω–µ–π", callback_data=f"nifas_days_{days}"))
    
    builder.add(InlineKeyboardButton(text="–î—Ä—É–≥–æ–µ (–≤–≤–µ—Å—Ç–∏)", callback_data="nifas_days_manual"))
    
    builder.adjust(3, 3, 1)
    return builder.as_markup()

def get_calculation_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ", callback_data="confirm_calculation"))
    builder.add(InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å", callback_data="recalculate"))
    
    builder.adjust(2)
    return builder.as_markup()

def get_continue_or_finish_keyboard(continue_callback: str, finish_callback: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–∑–∞–≤–µ—Ä—à–∏—Ç—å (–¥–ª—è —Ü–∏–∫–ª–æ–≤)"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data=continue_callback))
    builder.add(InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=finish_callback))
    
    builder.adjust(2)
    return builder.as_markup()

# –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
def get_calculation_method_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç–∞—Ä–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –º—É–∂—Å–∫—É—é"""
    return get_male_calculation_method_keyboard()

# def get_female_calculation_method_keyboard() -> InlineKeyboardMarkup:
#     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω"""
#     return get_female_calculation_method_keyboard()