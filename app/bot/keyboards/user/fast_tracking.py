from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List
from ....core.config import config
from ....core.database.models.fast import Fast

def get_fast_tracking_keyboard(fasts: List[Fast]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –ü–æ—Ä—è–¥–æ–∫ –ø–æ—Å—Ç–æ–≤
    fast_order = ['ramadan', 'voluntary', 'oath', 'kaffarah']
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    for fast_type in fast_order:
        fast_data = next((f for f in fasts if f.fast_type == fast_type), None)
        if fast_data and fast_data.remaining > 0:
            fast_name = config.FAST_TYPES[fast_type]
            
            # –°—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
            builder.add(InlineKeyboardButton(
                text=f"{fast_name}: {fast_data.remaining}", 
                callback_data=f"fast_info_{fast_type}"
            ))
            
            # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ + –∏ -
            builder.add(
                InlineKeyboardButton(text="‚ûñ", callback_data=f"fast_dec_{fast_type}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"fast_inc_{fast_type}")
            )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_fast_stats"))
    builder.add(InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å", callback_data="reset_fasts"))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    fasts_count = len([f for f in fasts if f.fast_type in fast_order and f.remaining > 0])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω: –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞ [1 –∫–Ω–æ–ø–∫–∞], [2 –∫–Ω–æ–ø–∫–∏]
    adjust_pattern = []
    
    # –ü–æ—Å—Ç—ã
    for _ in range(fasts_count):
        adjust_pattern.extend([1, 2])  # –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    adjust_pattern.extend([1, 1])
    
    builder.adjust(*adjust_pattern)
    
    return builder.as_markup()

def get_fast_adjustment_keyboard(fast_type: str, current_remaining: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è (–≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏–µ)
    builder.add(
        InlineKeyboardButton(text="-10", callback_data=f"fast_adjust_{fast_type}_-10"),
        InlineKeyboardButton(text="-5", callback_data=f"fast_adjust_{fast_type}_-5"),
        InlineKeyboardButton(text="-1", callback_data=f"fast_adjust_{fast_type}_-1")
    )
    
    # –ö–Ω–æ–ø–∫–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è
    builder.add(
        InlineKeyboardButton(text="+10", callback_data=f"fast_adjust_{fast_type}_10"),
        InlineKeyboardButton(text="+5", callback_data=f"fast_adjust_{fast_type}_5"),
        InlineKeyboardButton(text="+1", callback_data=f"fast_adjust_{fast_type}_1")
    )
    
    builder.add(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="fast_adjustment_done"))
    
    builder.adjust(3, 3, 1)
    
    return builder.as_markup()