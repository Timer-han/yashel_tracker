from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List
from ....core.database.models.fast import Fast
from ....core.config import config

def get_fast_tracking_keyboard(fasts: List[Fast]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã: —Å–Ω–∞—á–∞–ª–∞ –†–∞–º–∞–¥–∞–Ω –ø–æ –≥–æ–¥–∞–º, –∑–∞—Ç–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
    ramadan_fasts = sorted(
        [f for f in fasts if f.fast_type == 'ramadan'],
        key=lambda x: x.year or 0
    )
    other_fasts = [f for f in fasts if f.fast_type != 'ramadan']
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –†–∞–º–∞–¥–∞–Ω–∞
    for fast in ramadan_fasts:
        fast_name = f"–†–∞–º–∞–¥–∞–Ω {fast.year}" if fast.year else "–†–∞–º–∞–¥–∞–Ω"
        year_str = str(fast.year) if fast.year else "None"
        
        # –ö–Ω–æ–ø–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        builder.add(InlineKeyboardButton(
            text=f"{fast_name}: {fast.remaining} –¥–Ω–µ–π",
            callback_data=f"fast_info_{fast.fast_type}_{year_str}"
        ))
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        builder.add(
            InlineKeyboardButton(text="‚ûñ", callback_data=f"fast_dec_{fast.fast_type}_{year_str}"),
            InlineKeyboardButton(text="‚ûï", callback_data=f"fast_inc_{fast.fast_type}_{year_str}")
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã
    for fast in other_fasts:
        fast_name = config.FAST_TYPES.get(fast.fast_type, fast.fast_type)
        
        builder.add(InlineKeyboardButton(
            text=f"{fast_name}: {fast.remaining} –¥–Ω–µ–π",
            callback_data=f"fast_info_{fast.fast_type}_None"
        ))
        
        builder.add(
            InlineKeyboardButton(text="‚ûñ", callback_data=f"fast_dec_{fast.fast_type}_None"),
            InlineKeyboardButton(text="‚ûï", callback_data=f"fast_inc_{fast.fast_type}_None")
        )
    
    # –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    builder.add(InlineKeyboardButton(
        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤",
        callback_data="show_fast_stats"
    ))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º 2 –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞
    adjust_pattern = []
    total_fasts = len(ramadan_fasts) + len(other_fasts)
    
    for _ in range(total_fasts):
        adjust_pattern.extend([1, 2])  # –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    
    adjust_pattern.append(1)  # –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    
    builder.adjust(*adjust_pattern)
    
    return builder.as_markup()

def get_fast_adjustment_keyboard(fast_type: str, year: int = None, 
                                 current_remaining: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    year_str = str(year) if year else "None"
    
    # –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è
    builder.add(
        InlineKeyboardButton(text="‚úÖ +1", callback_data=f"fast_adjust_{fast_type}_{year_str}_1"),
        InlineKeyboardButton(text="‚úÖ +5", callback_data=f"fast_adjust_{fast_type}_{year_str}_5"),
        InlineKeyboardButton(text="‚úÖ +10", callback_data=f"fast_adjust_{fast_type}_{year_str}_10")
    )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö
    builder.add(
        InlineKeyboardButton(text="‚ûï +1", callback_data=f"fast_adjust_{fast_type}_{year_str}_-1"),
        InlineKeyboardButton(text="‚ûï +5", callback_data=f"fast_adjust_{fast_type}_{year_str}_-5"),
        InlineKeyboardButton(text="‚ûï +10", callback_data=f"fast_adjust_{fast_type}_{year_str}_-10")
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_fasts"))
    
    builder.adjust(3, 3, 1)
    
    return builder.as_markup()