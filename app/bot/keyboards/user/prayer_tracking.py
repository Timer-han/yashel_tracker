from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict
from ....core.config import config
from ....core.database.models.prayer import Prayer

def get_prayer_tracking_keyboard(prayers: List[Prayer]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞–º–∞–∑—ã –Ω–∞ –æ–±—ã—á–Ω—ã–µ –∏ —Å–∞—Ñ–∞—Ä
    prayer_order = ['fajr', 'zuhr', 'asr', 'maghrib', 'isha', 'witr']  # –ü–æ—Ä—è–¥–æ–∫ –æ–±—ã—á–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤
    safar_order = ['zuhr_safar', 'asr_safar', 'isha_safar']  # –ü–æ—Ä—è–¥–æ–∫ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑–æ–≤
    
    # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    for prayer_type in prayer_order:
        prayer_data = next((p for p in prayers if p.prayer_type == prayer_type), None)
        if prayer_data and prayer_data.remaining > 0:
            prayer_name = config.PRAYER_TYPES[prayer_type]
            
            # –°—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
            builder.add(InlineKeyboardButton(
                text=f"{prayer_name}: {prayer_data.remaining}", 
                callback_data=f"prayer_info_{prayer_type}"
            ))
            
            # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ + –∏ -
            builder.add(
                InlineKeyboardButton(text="‚ûñ", callback_data=f"prayer_dec_{prayer_type}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"prayer_inc_{prayer_type}")
            )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, –µ—Å–ª–∏ –µ—Å—Ç—å –∏ –æ–±—ã—á–Ω—ã–µ, –∏ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã
    has_regular = any(p for p in prayers if p.prayer_type in prayer_order and p.remaining > 0)
    has_safar = any(p for p in prayers if p.prayer_type in safar_order and p.remaining > 0)
    
    if has_regular and has_safar:
        builder.add(InlineKeyboardButton(text="‚úàÔ∏è ‚Äî –°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã ‚Äî ‚úàÔ∏è", callback_data="safar_divider"))
    
    # –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ
    for prayer_type in safar_order:
        prayer_data = next((p for p in prayers if p.prayer_type == prayer_type), None)
        if prayer_data and prayer_data.remaining > 0:
            prayer_name = config.PRAYER_TYPES[prayer_type]
            
            # –°—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
            builder.add(InlineKeyboardButton(
                text=f"{prayer_name}: {prayer_data.remaining}", 
                callback_data=f"prayer_info_{prayer_type}"
            ))
            
            # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ + –∏ -
            builder.add(
                InlineKeyboardButton(text="‚ûñ", callback_data=f"prayer_dec_{prayer_type}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"prayer_inc_{prayer_type}")
            )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats"))
    builder.add(InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å", callback_data="reset_prayers"))
    builder.add(InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="prayer_settings"))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    regular_count = len([p for p in prayers if p.prayer_type in prayer_order and p.remaining > 0])
    safar_count = len([p for p in prayers if p.prayer_type in safar_order and p.remaining > 0])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω: –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–º–∞–∑–∞ [1 –∫–Ω–æ–ø–∫–∞], [2 –∫–Ω–æ–ø–∫–∏]
    adjust_pattern = []
    
    # –û–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã
    for _ in range(regular_count):
        adjust_pattern.extend([1, 2])  # –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    
    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    if has_regular and has_safar:
        adjust_pattern.append(1)
    
    # –°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã
    for _ in range(safar_count):
        adjust_pattern.extend([1, 2])  # –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    adjust_pattern.extend([1, 1, 1])
    
    builder.adjust(*adjust_pattern)
    
    return builder.as_markup()


def get_prayer_adjustment_keyboard(prayer_type: str, current_remaining: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–º–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è (–≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏–µ)
    builder.add(
        InlineKeyboardButton(text="-10", callback_data=f"fast_adjust_{prayer_type}_-10"),
        InlineKeyboardButton(text="-5", callback_data=f"fast_adjust_{prayer_type}_-5"),
        InlineKeyboardButton(text="-1", callback_data=f"fast_adjust_{prayer_type}_-1")
    )
    
    # –ö–Ω–æ–ø–∫–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è
    builder.add(
        InlineKeyboardButton(text="+10", callback_data=f"fast_adjust_{prayer_type}_10"),
        InlineKeyboardButton(text="+5", callback_data=f"fast_adjust_{prayer_type}_5"),
        InlineKeyboardButton(text="+1", callback_data=f"fast_adjust_{prayer_type}_1")
    )
    
    # –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data=f"manual_input_{prayer_type}"))
    builder.add(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="adjustment_done"))
    
    builder.adjust(3, 3, 2)  # –ò–∑–º–µ–Ω–∏–ª –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É
    
    return builder.as_markup()

def get_reset_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(text="‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", callback_data="confirm_reset"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_reset")
    )
    
    builder.adjust(2)
    
    return builder.as_markup()

def get_prayer_category_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–º–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="üïå –û–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã", callback_data="category_regular"))
    builder.add(InlineKeyboardButton(text="‚úàÔ∏è –°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã", callback_data="category_safar"))
    builder.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats"))
    builder.add(InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å", callback_data="reset_prayers"))
    
    builder.adjust(2, 2)
    
    return builder.as_markup()

def get_compact_prayer_tracking_keyboard(prayers: List[Prayer], category: str = "regular") -> InlineKeyboardMarkup:
    """–ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤ —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º"""
    builder = InlineKeyboardBuilder()
    
    if category == "regular":
        prayer_order = ['fajr', 'zuhr', 'asr', 'maghrib', 'isha', 'witr']
    else:  # safar
        prayer_order = ['zuhr_safar', 'asr_safar', 'isha_safar']
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–º–∞–∑—ã –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    for prayer_type in prayer_order:
        prayer_data = next((p for p in prayers if p.prayer_type == prayer_type), None)
        if prayer_data and prayer_data.remaining > 0:
            prayer_name = config.PRAYER_TYPES[prayer_type]
            
            # –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            builder.add(InlineKeyboardButton(
                text=f"{prayer_name}: {prayer_data.remaining}", 
                callback_data=f"prayer_info_{prayer_type}"
            ))
            
            # –ö–Ω–æ–ø–∫–∏ - –∏ +
            builder.add(
                InlineKeyboardButton(text="‚ûñ", callback_data=f"prayer_dec_{prayer_type}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"prayer_inc_{prayer_type}")
            )
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if category == "regular":
        builder.add(InlineKeyboardButton(text="‚úàÔ∏è –°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã", callback_data="switch_to_safar"))
    else:
        builder.add(InlineKeyboardButton(text="üïå –û–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã", callback_data="switch_to_regular"))
    
    builder.add(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É", callback_data="back_to_categories"))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞—Ç–µ–º 2 –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–º–∞–∑–∞
    prayers_count = len([p for p in prayers if p.prayer_type in prayer_order and p.remaining > 0])
    adjust_pattern = [1, 2] * prayers_count + [1, 1]  # –ü–æ 2 —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –Ω–∞–º–∞–∑ + –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    
    builder.adjust(*adjust_pattern)
    
    return builder.as_markup()
