from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from ...keyboards.user.prayer_tracking import (
    get_prayer_tracking_keyboard, 
    get_prayer_adjustment_keyboard,
    get_reset_confirmation_keyboard
)
from ....core.services.prayer_service import PrayerService
from ....core.config import config

router = Router()
prayer_service = PrayerService()

@router.message(F.text == "‚ûï –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∞–º–∞–∑—ã")
async def show_prayer_tracking(message: Message):
    """–ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤"""
    prayers = await prayer_service.get_user_prayers(message.from_user.id)
    
    if not prayers:
        await message.answer(
            "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–º–∞–∑–∞—Ö.\n"
            "–°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π 'üî¢ –†–∞—Å—á–µ—Ç –Ω–∞–º–∞–∑–æ–≤'."
        )
        return
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –Ω–∞–º–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å
    prayers_to_show = [p for p in prayers if p.remaining > 0]
    
    if not prayers_to_show:
        await message.answer(
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ –≤–∞—à–∏ –Ω–∞–º–∞–∑—ã –≤–æ—Å–ø–æ–ª–Ω–µ–Ω—ã!\n"
            "–ú–∞—à–∞–∞ –õ–ª–∞—Ö! ü§≤"
        )
        return
    
    await message.answer(
        "‚ûï **–û—Ç–º–µ—Ç–∏—Ç—å –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –Ω–∞–º–∞–∑—ã**\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ ‚ûñ –∏ ‚ûï –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤.\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–º–∞–∑–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
        reply_markup=get_prayer_tracking_keyboard(prayers),
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("prayer_inc_"))
async def increase_prayer(callback: CallbackQuery):
    """–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤"""
    prayer_type = callback.data.split("_")[2]
    
    success = await prayer_service.update_prayer_count(
        callback.from_user.id, prayer_type, 1
    )
    
    if success:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        prayers = await prayer_service.get_user_prayers(callback.from_user.id)
        await callback.message.edit_reply_markup(
            reply_markup=get_prayer_tracking_keyboard(prayers)
        )
        
        prayer_name = config.PRAYER_TYPES[prayer_type]
        await callback.answer(f"‚úÖ {prayer_name} +1", show_alert=False)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)

@router.callback_query(F.data.startswith("prayer_dec_"))
async def decrease_prayer(callback: CallbackQuery):
    """–£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤"""
    prayer_type = callback.data.split("_")[2]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É–º–µ–Ω—å—à–∏—Ç—å
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    if not prayer or prayer.completed <= 0:
        await callback.answer("‚ùå –ù–µ–ª—å–∑—è —É–º–µ–Ω—å—à–∏—Ç—å –Ω–∏–∂–µ 0", show_alert=True)
        return
    
    success = await prayer_service.update_prayer_count(
        callback.from_user.id, prayer_type, -1
    )
    
    if success:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        prayers = await prayer_service.get_user_prayers(callback.from_user.id)
        await callback.message.edit_reply_markup(
            reply_markup=get_prayer_tracking_keyboard(prayers)
        )
        
        prayer_name = config.PRAYER_TYPES[prayer_type]
        await callback.answer(f"‚ûñ {prayer_name} -1", show_alert=False)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)

@router.callback_query(F.data.startswith("prayer_info_"))
async def show_prayer_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–º–∞–∑–µ"""
    prayer_type = callback.data.split("_")[2]
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    
    if not prayer:
        await callback.answer("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    prayer_name = config.PRAYER_TYPES[prayer_type]
    info_text = (
        f"üïå **{prayer_name}**\n\n"
        f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {prayer.total_missed}\n"
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: {prayer.completed}\n"
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {prayer.remaining}\n\n"
    )
    
    if prayer.total_missed > 0:
        progress = (prayer.completed / prayer.total_missed) * 100
        info_text += f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}%"
    
    await callback.message.answer(
        info_text,
        reply_markup=get_prayer_adjustment_keyboard(prayer_type, prayer.remaining),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "show_stats")
async def show_stats_from_tracking(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    stats = await prayer_service.get_user_statistics(callback.from_user.id)
    
    stats_text = (
        "üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n\n"
        f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: **{stats['total_missed']}**\n"
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: **{stats['total_completed']}**\n"
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{stats['total_remaining']}**\n\n"
    )
    
    if stats['total_completed'] > 0:
        progress = (stats['total_completed'] / stats['total_missed']) * 100
        stats_text += f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: **{progress:.1f}%**"
    
    await callback.answer()
    await callback.message.answer(stats_text, parse_mode="Markdown")

@router.callback_query(F.data == "reset_prayers")
async def confirm_reset_prayers(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –Ω–∞–º–∞–∑–æ–≤"""
    await callback.message.answer(
        "üîÑ **–°–±—Ä–æ—Å –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö**\n\n"
        "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤?\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        reply_markup=get_reset_confirmation_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "confirm_reset")
async def reset_prayers_confirmed(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å –Ω–∞–º–∞–∑–æ–≤"""
    success = await prayer_service.reset_user_prayers(callback.from_user.id)
    
    if success:
        await callback.message.edit_text(
            "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞.\n\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π 'üî¢ –†–∞—Å—á–µ—Ç –Ω–∞–º–∞–∑–æ–≤' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö."
        )
    else:
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö.")

@router.callback_query(F.data == "cancel_reset")
async def cancel_reset_prayers(callback: CallbackQuery):
    """–û—Ç–º–µ–Ω–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞–º–∞–∑–æ–≤"""
    await callback.message.edit_text("‚ùå –°–±—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω.")
    await callback.answer()
