import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from ...keyboards.user.prayer_tracking import (
    get_prayer_tracking_keyboard, 
    get_prayer_adjustment_keyboard,
    get_reset_confirmation_keyboard,
    get_prayer_category_keyboard,
    get_compact_prayer_tracking_keyboard
)
from ....core.services.prayer_service import PrayerService
from ....core.config import config


logger = logging.getLogger(__name__)
router = Router()
prayer_service = PrayerService()

@router.message(F.text == "‚ûï –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∞–º–∞–∑—ã")
async def show_prayer_tracking(message: Message):
    """–ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤"""
    prayers = await prayer_service.get_user_prayers(message.from_user.id)
    
    if not prayers:
        await message.answer(
            "–î–∞–Ω–Ω—ã–µ –æ –Ω–∞–º–∞–∑–∞—Ö –Ω–µ –≤–≤–µ–¥–µ–Ω—ã ü•≤\n"
            "–°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π 'üî¢ –†–∞—Å—á–µ—Ç –Ω–∞–º–∞–∑–æ–≤'"
        )
        return
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –Ω–∞–º–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å
    prayers_to_show = [p for p in prayers if p.remaining > 0]
    
    if not prayers_to_show:
        await message.answer(
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ —Ç–≤–æ–∏ –Ω–∞–º–∞–∑—ã –≤–æ—Å–ø–æ–ª–Ω–µ–Ω—ã!\n"
            "–¢—ã —Å–¥–µ–ª–∞–ª –æ–≥—Ä–æ–º–Ω—ã–π –≤–∫–ª–∞–¥ –≤ –ê—Ö–∏—Ä–∞—Ç. –ü—É—Å—Ç—å –í—Å–µ–≤—ã—à–Ω–∏–π –ø—Ä–∏–º–µ—Ç –∏ –±—É–¥–µ—Ç —Ç–æ–±–æ–π –¥–æ–≤–æ–ª–µ–Ω!"
        )
        return
    
    await message.answer(
        "‚ûï **–û—Ç–º–µ—Ç–∏—Ç—å –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –Ω–∞–º–∞–∑—ã**\n\n"
        "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞–º–∞–∑–æ–≤:",
        reply_markup=get_prayer_category_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("prayer_inc_"))
async def increase_prayer(callback: CallbackQuery):
    """–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –û–°–¢–ê–í–®–ò–•–°–Ø –Ω–∞–º–∞–∑–æ–≤"""
    prayer_type = callback.data.split("_")[2]
    if len(callback.data.split("_")) > 3:
        prayer_type += "_" + callback.data.split("_")[3]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    
    if not prayer:
        await callback.answer("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    # –ï—Å–ª–∏ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö <= 0, –¥–æ–±–∞–≤–ª—è–µ–º –∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º
    if prayer.completed <= 0:
        success = await prayer_service.increase_missed_prayers(
            callback.from_user.id, prayer_type, 1
        )
        
        if success:
            updated_prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
            await send_action_message_and_update_menu(callback, prayer_type, "increase_missed", updated_prayer)
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)
    else:
        # –£–º–µ–Ω—å—à–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)
        success = await prayer_service.update_prayer_count(
            callback.from_user.id, prayer_type, -1
        )
        
        if success:
            updated_prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
            await send_action_message_and_update_menu(callback, prayer_type, "decrease_completed", updated_prayer)
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)

@router.callback_query(F.data.startswith("prayer_dec_"))
async def decrease_prayer(callback: CallbackQuery):
    """–£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –û–°–¢–ê–í–®–ò–•–°–Ø –Ω–∞–º–∞–∑–æ–≤ (—É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö)"""
    prayer_type = callback.data.split("_")[2]
    if len(callback.data.split("_")) > 3:
        prayer_type += "_" + callback.data.split("_")[3]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á—Ç–æ –≤–æ—Å–ø–æ–ª–Ω—è—Ç—å
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    if not prayer or prayer.remaining <= 0:
        await callback.answer("‚ùå –ù–µ—Ç –Ω–∞–º–∞–∑–æ–≤ –¥–ª—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è", show_alert=True)
        return
    
    success = await prayer_service.update_prayer_count(
        callback.from_user.id, prayer_type, 1
    )
    
    if success:
        updated_prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
        await send_action_message_and_update_menu(callback, prayer_type, "increase_completed", updated_prayer)
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)

async def send_action_message_and_update_menu(callback_query, prayer_type: str, action_type: str, prayer_data):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –º–µ–Ω—é"""
    prayer_name = config.PRAYER_TYPES[prayer_type]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–µ–π—Å—Ç–≤–∏—è
    if action_type == "increase_completed":
        action_text = "–≤–æ—Å–ø–æ–ª–Ω–µ–Ω 1 –Ω–∞–º–∞–∑"
        action_emoji = "‚úÖ"
    elif action_type == "decrease_completed":
        action_text = "—É–±—Ä–∞–Ω 1 –Ω–∞–º–∞–∑ –∏–∑ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö"
        action_emoji = "‚ûñ"
    elif action_type == "increase_missed":
        action_text = "–¥–æ–±–∞–≤–ª–µ–Ω 1 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –Ω–∞–º–∞–∑"
        action_emoji = "‚ûï"
    else:
        action_text = "–∏–∑–º–µ–Ω–µ–Ω"
        action_emoji = "üîÑ"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º progress bar
    if prayer_data.total_missed > 0:
        progress = (prayer_data.completed / prayer_data.total_missed) * 100
        progress_bar = "‚ñì" * int(progress / 10) + "‚ñë" * (10 - int(progress / 10))
        progress_text = f"\nüìä [{progress_bar}] {progress:.1f}%"
    else:
        progress_text = ""
    
    notification_text = (
        f"{action_emoji} **{prayer_name}:** {action_text}\n\n"
        f"üìù –í—Å–µ–≥–æ: **{prayer_data.total_missed}** \n "
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: **{prayer_data.completed}** \n "
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{prayer_data.remaining}**"
        f"{progress_text}"
    )
    
    # –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if prayer_data.remaining == 0:
        notification_text += f"\n\nüéâ **–ú–∞—à–∞–∞ –õ–ª–∞—Ö!** –í—Å–µ {prayer_name} –≤–æ—Å–ø–æ–ª–Ω–µ–Ω—ã!"
    
    # 1. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await callback_query.message.edit_text(notification_text, parse_mode="Markdown")
    
    # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
    prayers = await prayer_service.get_user_prayers(callback_query.from_user.id)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ç–∏–ø—É –Ω–∞–º–∞–∑–∞
    if prayer_type.endswith('_safar'):
        category = "safar"
        category_name = "‚úàÔ∏è **–°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã**"
    else:
        category = "regular"
        category_name = "üïå **–û–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã**"
    
    await callback_query.message.answer(
        f"{category_name}\n\n"
        "‚ûñ - –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å –Ω–∞–º–∞–∑ (—É–º–µ–Ω—å—à–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)\n"
        "‚ûï - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π (—É–≤–µ–ª–∏—á–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)",
        reply_markup=get_compact_prayer_tracking_keyboard(prayers, category),
        parse_mode="Markdown"
    )


@router.callback_query(F.data.startswith("prayer_info_"))
async def show_prayer_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–º–∞–∑–µ"""
    # –ü–∞—Ä—Å–∏–º prayer_type —Å —É—á–µ—Ç–æ–º —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑–æ–≤
    parts = callback.data.split("_")
    if len(parts) == 4 and parts[3] == "safar":  # prayer_info_zuhr_safar
        prayer_type = f"{parts[2]}_{parts[3]}"
    else:  # prayer_info_fajr
        prayer_type = parts[2]
    
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    
    if not prayer:
        await callback.answer("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    prayer_name = config.PRAYER_TYPES[prayer_type]
    info_text = (
        f"üïå **{prayer_name}**\n\n"
        f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {prayer.total_missed}\n"
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: {prayer.completed}\n"
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {prayer.remaining}\n\n"
    )
    
    if prayer.total_missed > 0:
        progress = (prayer.completed / prayer.total_missed) * 100
        info_text += f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}%"
    
    await callback.message.answer(
        info_text,
        reply_markup=get_prayer_adjustment_keyboard(prayer_type, prayer.remaining),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "show_stats")
async def show_stats_from_tracking(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    stats = await prayer_service.get_user_statistics(callback.from_user.id)
    
    stats_text = (
        "üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n\n"
        f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: **{stats['total_missed']}**\n"
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: **{stats['total_completed']}**\n"
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{stats['total_remaining']}**\n\n"
    )
    
    if stats['total_completed'] > 0:
        progress = (stats['total_completed'] / stats['total_missed']) * 100
        stats_text += f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: **{progress:.1f}%**"
    
    await callback.answer()
    await callback.message.answer(stats_text, parse_mode="Markdown")

@router.callback_query(F.data == "reset_prayers")
async def confirm_reset_prayers(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –Ω–∞–º–∞–∑–æ–≤"""
    await callback.message.answer(
        "üîÑ **–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö**\n"
        "‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
        "‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–º–∞–∑–æ–≤\n"
        "‚Ä¢ –°–±—Ä–æ—Å–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "‚Ä¢ –ü–æ—Ç—Ä–µ–±—É–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ **–ù–ï–û–ë–†–ê–¢–ò–ú–û**!\n"
        "–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
        reply_markup=get_reset_confirmation_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "confirm_reset")
async def reset_prayers_confirmed(callback: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å –Ω–∞–º–∞–∑–æ–≤"""
    success = await prayer_service.reset_user_prayers(callback.from_user.id)
    
    if success:
        await callback.message.edit_text(
            "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞.\n\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π 'üî¢ –†–∞—Å—á–µ—Ç –Ω–∞–º–∞–∑–æ–≤' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö."
        )
    else:
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö.")

@router.callback_query(F.data == "cancel_reset")
async def cancel_reset_prayers(callback: CallbackQuery):
    """–û—Ç–º–µ–Ω–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞–º–∞–∑–æ–≤"""
    await callback.message.edit_text("‚ùå –°–±—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω.")
    await callback.answer()

@router.callback_query(F.data == "safar_divider")
async def safar_divider_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑–æ–≤"""
    await callback.answer("‚úàÔ∏è –≠—Ç–æ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã - —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ –Ω–∞–º–∞–∑—ã –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π", show_alert=True)


@router.callback_query(F.data.startswith("fast_adjust_"))
async def fast_adjust_prayer(callback: CallbackQuery):
    """–ë—ã—Å—Ç—Ä–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–º–∞–∑–æ–≤"""
    parts = callback.data.split("_")

    logger.critical(callback.data)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Å–∞—Ñ–∞—Ä, —Ç–∞–∫ –∏ –æ–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã
    if len(parts) == 4:  # fast_adjust_fajr_10
        prayer_type = parts[2]
        amount = int(parts[3])
    elif len(parts) == 5:  # fast_adjust_zuhr_safar_10
        prayer_type = f"{parts[2]}_{parts[3]}"  # zuhr_safar
        amount = int(parts[4])
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
        return
    
    logger.critical(prayer_type)
    
    prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
    if not prayer:
        await callback.answer("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return
    
    success = False
    action_type = ""
    
    if amount > 0:
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è (–ª–∏–±–æ —É–º–µ–Ω—å—à–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ, –ª–∏–±–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º)
        if prayer.completed >= amount:
            # –£–º–µ–Ω—å—à–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ
            success = await prayer_service.update_prayer_count(
                callback.from_user.id, prayer_type, -amount
            )
            action_type = "decrease_completed"
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º
            success = await prayer_service.increase_missed_prayers(
                callback.from_user.id, prayer_type, amount
            )
            action_type = "increase_missed"
    else:
        # –£–º–µ–Ω—å—à–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è (—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ)
        if prayer.remaining >= abs(amount):
            success = await prayer_service.update_prayer_count(
                callback.from_user.id, prayer_type, abs(amount)
            )
            action_type = "increase_completed"
        else:
            await callback.answer(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–º–∞–∑–æ–≤ –¥–ª—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è (–¥–æ—Å—Ç—É–ø–Ω–æ: {prayer.remaining})", show_alert=True)
            return
    
    if success:
        updated_prayer = await prayer_service.prayer_repo.get_prayer(callback.from_user.id, prayer_type)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
        prayer_name = config.PRAYER_TYPES[prayer_type]
        
        if amount > 0:
            if action_type == "decrease_completed":
                action_text = f"—É–±—Ä–∞–Ω–æ {amount} –∏–∑ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö"
                action_emoji = "‚ûñ"
            else:
                action_text = f"–¥–æ–±–∞–≤–ª–µ–Ω–æ {amount} –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö"
                action_emoji = "‚ûï"
        else:
            action_text = f"–≤–æ—Å–ø–æ–ª–Ω–µ–Ω–æ {abs(amount)} –Ω–∞–º–∞–∑–æ–≤"
            action_emoji = "‚úÖ"
        
        result_text = (
            f"{action_emoji} **{prayer_name}:** {action_text}\n\n"
            f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: **{updated_prayer.total_missed}**\n"
            f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: **{updated_prayer.completed}**\n"
            f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{updated_prayer.remaining}**"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        await callback.message.edit_text(
            result_text,
            reply_markup=get_prayer_adjustment_keyboard(prayer_type, updated_prayer.remaining),
            parse_mode="Markdown"
        )
        
        await callback.answer()
    else:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)


@router.callback_query(F.data == "adjustment_done")
async def finish_adjustment(callback: CallbackQuery):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–º–∞–∑–∞"""
    await callback.message.edit_text(
        "‚ûï **–û—Ç–º–µ—Ç–∏—Ç—å –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –Ω–∞–º–∞–∑—ã**\n\n"
        "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞–º–∞–∑–æ–≤:",
        reply_markup=get_prayer_category_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "category_regular")
async def show_regular_prayers(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ –æ–±—ã—á–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤"""
    prayers = await prayer_service.get_user_prayers(callback.from_user.id)
    regular_order = ['fajr', 'zuhr', 'asr', 'maghrib', 'isha', 'witr']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã –¥–ª—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è
    has_regular = any(p for p in prayers if p.prayer_type in regular_order and p.remaining > 0)
    
    if not has_regular:
        await callback.message.edit_text(
            "‚úÖ –í—Å–µ –æ–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã –≤–æ—Å–ø–æ–ª–Ω–µ–Ω—ã!\n\n"
            "–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=get_prayer_category_keyboard()
        )
        return
    
    await callback.message.edit_text(
        "üïå **–û–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã**\n\n"
        "‚ûñ - –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å –Ω–∞–º–∞–∑ (—É–º–µ–Ω—å—à–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)\n"
        "‚ûï - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π (—É–≤–µ–ª–∏—á–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)",
        reply_markup=get_compact_prayer_tracking_keyboard(prayers, "regular"),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "category_safar")
async def show_safar_prayers(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑–æ–≤"""
    prayers = await prayer_service.get_user_prayers(callback.from_user.id)
    safar_order = ['zuhr_safar', 'asr_safar', 'isha_safar']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã –¥–ª—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏—è
    has_safar = any(p for p in prayers if p.prayer_type in safar_order and p.remaining > 0)
    
    if not has_safar:
        await callback.message.edit_text(
            "‚úÖ –í—Å–µ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã –≤–æ—Å–ø–æ–ª–Ω–µ–Ω—ã!\n\n–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=get_prayer_category_keyboard()
        )
        return
    
    await callback.message.edit_text(
        "‚úàÔ∏è **–°–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã**\n\n"
        "‚ûñ - –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å –Ω–∞–º–∞–∑ (—É–º–µ–Ω—å—à–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)\n"
        "‚ûï - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π (—É–≤–µ–ª–∏—á–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è)",
        reply_markup=get_compact_prayer_tracking_keyboard(prayers, "safar"),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "switch_to_safar")
async def switch_to_safar(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–∞—Ñ–∞—Ä –Ω–∞–º–∞–∑—ã"""
    await show_safar_prayers(callback)

@router.callback_query(F.data == "switch_to_regular")
async def switch_to_regular(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ–±—ã—á–Ω—ã–µ –Ω–∞–º–∞–∑—ã"""
    await show_regular_prayers(callback)

@router.callback_query(F.data == "back_to_categories")
async def back_to_categories(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    await callback.message.edit_text(
        "‚ûï **–û—Ç–º–µ—Ç–∏—Ç—å –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –Ω–∞–º–∞–∑—ã**\n\n"
        "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞–º–∞–∑–æ–≤:",
        reply_markup=get_prayer_category_keyboard(),
        parse_mode="Markdown"
    )