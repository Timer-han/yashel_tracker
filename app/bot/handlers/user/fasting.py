from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from ...keyboards.user.fasting import get_fasting_keyboard, get_fasting_action_keyboard
from ....core.services.women_calculation_service import WomenCalculationService
from ....core.services.user_service import UserService
from ...states.fasting import FastingStates
from ....core.config import config

router = Router()
women_calc_service = WomenCalculationService()
user_service = UserService()

@router.message(F.text == "üìø –ü–æ—Å—Ç—ã")
async def show_fasting_menu(message: Message):
    """–ü–æ–∫–∞–∑ –º–µ–Ω—é –ø–æ—Å—Ç–æ–≤"""
    user = await user_service.get_or_create_user(message.from_user.id)
    
    if not user.is_registered:
        await message.answer(
            "üìä –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Å—Ç–æ–≤."
        )
        return
    
    stats_text = (
        "üìø **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–º–∏**\n\n"
        f"üìù –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥–Ω–µ–π: **{user.fasting_missed_days}**\n"
        f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ –¥–Ω–µ–π: **{user.fasting_completed_days}**\n"
        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{user.fasting_remaining_days}**\n"
    )
    
    if user.fasting_missed_days > 0:
        progress = (user.fasting_completed_days / user.fasting_missed_days) * 100
        progress_bar = "‚ñì" * int(progress / 10) + "‚ñë" * (10 - int(progress / 10))
        stats_text += f"\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: [{progress_bar}] {progress:.1f}%"
    
    await message.answer(
        stats_text,
        reply_markup=get_fasting_keyboard(),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "fast_calculate")
async def start_fast_calculation(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤"""
    user = await user_service.get_or_create_user(callback.from_user.id)
    
    if not user.birth_date:
        await callback.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö", show_alert=True)
        return
    
    await callback.message.edit_text(
        "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –≤—ã –Ω–∞—á–∞–ª–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å –ø–æ—Å—Ç—ã –≤ –†–∞–º–∞–¥–∞–Ω\n"
        "–§–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: 01.05.2023"
    )
    await state.set_state(FastingStates.waiting_for_fast_start_date)

@router.message(FastingStates.waiting_for_fast_start_date)
async def process_fast_start_date(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
    from ...utils.date_utils import parse_date
    
    fast_start_date = parse_date(message.text)
    if not fast_start_date:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì")
        return
    
    user = await user_service.get_or_create_user(message.from_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
    adult_age = config.ADULT_AGE_FEMALE if user.gender == 'female' else config.ADULT_AGE_MALE
    adult_date = user.birth_date.replace(year=user.birth_date.year + adult_age)
    
    if fast_start_date <= adult_date:
        await message.answer(
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–±–ª—é–¥–∞—Ç—å –ø–æ—Å—Ç—ã —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è.\n"
            "–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–µ—Ç."
        )
        await state.clear()
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–æ–¥–∞—Ö –¥–ª—è –∂–µ–Ω—â–∏–Ω
    childbirth_data = user.get_childbirth_info() if user.gender == 'female' else None
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
    result = women_calc_service.calculate_missed_fasts_detailed(
        birth_date=user.birth_date,
        adult_date=adult_date,
        fast_start_date=fast_start_date,
        gender=user.gender,
        hayd_average_days=user.hayd_average_days,
        childbirth_data=childbirth_data
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    from ....core.database.repositories.user_repository import UserRepository
    user_repo = UserRepository()
    await user_repo.update_user(
        telegram_id=message.from_user.id,
        fasting_missed_days=result['total']
    )
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    report_text = (
        f"‚úÖ **–†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
        f"üìÖ –ü–µ—Ä–∏–æ–¥: —Å {adult_date.strftime('%d.%m.%Y')} –ø–æ {fast_start_date.strftime('%d.%m.%Y')}\n"
        f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –†–∞–º–∞–¥–∞–Ω–æ–≤: {result['ramadan_count']}\n\n"
        f"üìù **–í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ –¥–Ω–µ–π –ø–æ—Å—Ç–∞: {result['total']}**\n\n"
    )
    
    if user.gender == 'female':
        report_text += (
            "**–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –∂–µ–Ω—â–∏–Ω:**\n"
            f"‚Ä¢ –î–Ω–µ–π —Ö–∞–π–¥–∞ –≤–æ –≤—Ä–µ–º—è –†–∞–º–∞–¥–∞–Ω–æ–≤: ~{result['hayd_days']}\n"
            f"‚Ä¢ –î–Ω–µ–π –Ω–∏—Ñ–∞—Å–∞ –≤–æ –≤—Ä–µ–º—è –†–∞–º–∞–¥–∞–Ω–æ–≤: {result['nifas_days']}\n\n"
            "üí´ **–í–∞–∂–Ω–æ:** –ü–æ—Å—Ç—ã, –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∏–∑-–∑–∞ —Ö–∞–π–¥–∞ –∏ –Ω–∏—Ñ–∞—Å–∞, "
            "—Ç–∞–∫–∂–µ –Ω—É–∂–Ω–æ –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å –≤ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ 1:1\n"
        )
    
    report_text += "\nü§≤ –ü—É—Å—Ç—å –ê–ª–ª–∞—Ö –æ–±–ª–µ–≥—á–∏—Ç –≤–∞–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏–µ!"
    
    await message.answer(report_text, parse_mode="Markdown")
    await state.clear()

@router.callback_query(F.data.startswith("fast_"))
async def handle_fasting_actions(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ—Å—Ç–∞–º–∏"""
    action = callback.data.split("_")[1]
    
    from ....core.database.repositories.user_repository import UserRepository
    user_repo = UserRepository()
    user = await user_service.get_or_create_user(callback.from_user.id)
    
    if action == "add":
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ
        await user_repo.update_user(
            telegram_id=callback.from_user.id,
            fasting_completed_days=user.fasting_completed_days + 1
        )
        await callback.answer("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω 1 –¥–µ–Ω—å –ø–æ—Å—Ç–∞")
        
    elif action == "remove":
        # –£–º–µ–Ω—å—à–∞–µ–º –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ
        if user.fasting_completed_days > 0:
            await user_repo.update_user(
                telegram_id=callback.from_user.id,
                fasting_completed_days=user.fasting_completed_days - 1
            )
            await callback.answer("‚ûñ –£–±—Ä–∞–Ω 1 –¥–µ–Ω—å –ø–æ—Å—Ç–∞")
        else:
            await callback.answer("‚ùå –ù–µ—Ç –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π", show_alert=True)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
    await show_fasting_menu(callback.message)