from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from datetime import datetime
import logging

from ...keyboards.user.female_periods import (
    get_childbirth_keyboard,
    get_continue_keyboard
)
from ....core.database.repositories.female_periods_repository import FemalePeriodsRepository
from ....core.database.repositories.user_repository import UserRepository
from ....core.database.models.hayd import HaydInfo
from ....core.database.models.nifas import NifasInfo
from ....core.config import config
from ...states.female_periods import FemalePeriodsStates
from ...utils.date_utils import parse_date

logger = logging.getLogger(__name__)
router = Router()

periods_repo = FemalePeriodsRepository()
user_repo = UserRepository()

async def start_female_periods_input(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–µ–Ω—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–∞—Ö"""
    user = await user_repo.get_user_by_telegram_id(message.from_user.id)
    
    if user.gender != 'female':
        # –î–ª—è –º—É–∂—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —ç—Ç–∞–ø
        return False
    
    await message.answer(
        "üë© **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂–µ–Ω—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–∞—Ö**\n\n"
        "–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–º–∞–∑–æ–≤ –∏ –ø–æ—Å—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–µ—Å—Ç—å –ø–µ—Ä–∏–æ–¥—ã, "
        "–∫–æ–≥–¥–∞ –∂–µ–Ω—â–∏–Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ —Å–æ–≤–µ—Ä—à–∞—Ç—å –Ω–∞–º–∞–∑.\n\n"
        "üìç –£–∫–∞–∂–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞–π–¥–∞ –≤ –¥–Ω—è—Ö (–æ—Ç 3 –¥–æ 10):",
        parse_mode="Markdown"
    )
    await state.set_state(FemalePeriodsStates.entering_hayd_duration)
    return True

@router.message(FemalePeriodsStates.entering_hayd_duration)
async def process_hayd_duration(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ö–∞–π–¥–∞"""
    try:
        duration = int(message.text)
        
        if duration < config.HAYD_MIN_DAYS or duration > config.HAYD_MAX_DAYS:
            await message.answer(
                f"‚ùå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {config.HAYD_MIN_DAYS} –¥–æ {config.HAYD_MAX_DAYS} –¥–Ω–µ–π."
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—â—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞–π–¥–∞ (–ø–µ—Ä–∏–æ–¥ 0)
        await state.update_data(hayd_duration_general=duration)
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ —Ä–æ–¥–∞—Ö
        await message.answer(
            "üë∂ –ë—ã–ª–∏ –ª–∏ —É –≤–∞—Å —Ä–æ–¥—ã?",
            reply_markup=get_childbirth_keyboard()
        )
        await state.set_state(FemalePeriodsStates.asking_childbirth)
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@router.callback_query(FemalePeriodsStates.asking_childbirth, F.data == "has_childbirth_yes")
async def process_has_childbirth(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–æ–¥–æ–≤"""
    await callback.message.edit_text(
        "üë∂ –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ —É –≤–∞—Å –±—ã–ª–∏ —Ä–æ–¥—ã?\n\n"
        "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:"
    )
    await state.set_state(FemalePeriodsStates.entering_childbirth_count)

@router.callback_query(FemalePeriodsStates.asking_childbirth, F.data == "has_childbirth_no")
async def process_no_childbirth(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–æ–¥–æ–≤"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö–∞–π–¥
    hayd_info = HaydInfo(
        user_id=user_id,
        average_duration=data['hayd_duration_general'],
        period_number=0
    )
    await periods_repo.save_hayd_info(hayd_info)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await user_repo.update_user(
        telegram_id=user_id,
        has_childbirth=False,
        childbirth_count=0
    )
    
    await callback.message.edit_text(
        "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂–µ–Ω—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–∞—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n\n"
        "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞—Å—á–µ—Ç—É –Ω–∞–º–∞–∑–æ–≤ –∏ –ø–æ—Å—Ç–æ–≤."
    )
    await state.clear()

@router.message(FemalePeriodsStates.entering_childbirth_count)
async def process_childbirth_count(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–æ–¥–æ–≤"""
    try:
        count = int(message.text)
        
        if count < 1 or count > 20:
            await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–æ—Ç 1 –¥–æ 20).")
            return
        
        await state.update_data(
            childbirth_count=count,
            current_childbirth=1,
            childbirth_data=[]
        )
        
        # –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–∞—Ö
        await message.answer(
            "üìÖ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ 1-—Ö —Ä–æ–¥–∞—Ö**\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞–π–¥–∞ –î–û –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤ (–≤ –¥–Ω—è—Ö):",
            parse_mode="Markdown"
        )
        await state.set_state(FemalePeriodsStates.entering_hayd_before_childbirth)
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@router.message(FemalePeriodsStates.entering_hayd_before_childbirth)
async def process_hayd_before(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–∞–π–¥–∞ –¥–æ —Ä–æ–¥–æ–≤"""
    try:
        duration = int(message.text)
        
        if duration < config.HAYD_MIN_DAYS or duration > config.HAYD_MAX_DAYS:
            await message.answer(
                f"‚ùå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {config.HAYD_MIN_DAYS} –¥–æ {config.HAYD_MAX_DAYS} –¥–Ω–µ–π."
            )
            return
        
        data = await state.get_data()
        current_num = data['current_childbirth']
        
        await state.update_data(**{f"hayd_before_{current_num}": duration})
        
        await message.answer(
            f"üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É {current_num}-—Ö —Ä–æ–¥–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 15.03.2020"
        )
        await state.set_state(FemalePeriodsStates.entering_childbirth_date)
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@router.message(FemalePeriodsStates.entering_childbirth_date)
async def process_childbirth_date(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã —Ä–æ–¥–æ–≤"""
    childbirth_date = parse_date(message.text)
    
    if not childbirth_date:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì")
        return
    
    data = await state.get_data()
    current_num = data['current_childbirth']
    
    await state.update_data(**{f"childbirth_date_{current_num}": childbirth_date})
    
    await message.answer(
        f"üìÖ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∏—Ñ–∞—Å–∞ –ø–æ—Å–ª–µ {current_num}-—Ö —Ä–æ–¥–æ–≤ (–≤ –¥–Ω—è—Ö, –º–∞–∫—Å–∏–º—É–º {config.NIFAS_MAX_DAYS}):"
    )
    await state.set_state(FemalePeriodsStates.entering_nifas_duration)

@router.message(FemalePeriodsStates.entering_nifas_duration)
async def process_nifas_duration(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∏—Ñ–∞—Å–∞"""
    try:
        duration = int(message.text)
        
        if duration < 1 or duration > config.NIFAS_MAX_DAYS:
            await message.answer(
                f"‚ùå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ {config.NIFAS_MAX_DAYS} –¥–Ω–µ–π."
            )
            return
        
        data = await state.get_data()
        current_num = data['current_childbirth']
        
        await state.update_data(**{f"nifas_duration_{current_num}": duration})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ —Ä–æ–¥—ã
        if current_num < data['childbirth_count']:
            await message.answer(
                f"üìÖ –í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞–π–¥–∞ –ü–û–°–õ–ï {current_num}-—Ö —Ä–æ–¥–æ–≤ (–≤ –¥–Ω—è—Ö):"
            )
            await state.set_state(FemalePeriodsStates.entering_hayd_after_childbirth)
        else:
            # –≠—Ç–æ –±—ã–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–æ–¥—ã
            await message.answer(
                f"üìÖ –í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞–π–¥–∞ –ü–û–°–õ–ï {current_num}-—Ö —Ä–æ–¥–æ–≤ (–≤ –¥–Ω—è—Ö):"
            )
            await state.set_state(FemalePeriodsStates.entering_hayd_after_childbirth)
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@router.message(FemalePeriodsStates.entering_hayd_after_childbirth)
async def process_hayd_after(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–∞–π–¥–∞ –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤"""
    try:
        duration = int(message.text)
        
        if duration < config.HAYD_MIN_DAYS or duration > config.HAYD_MAX_DAYS:
            await message.answer(
                f"‚ùå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {config.HAYD_MIN_DAYS} –¥–æ {config.HAYD_MAX_DAYS} –¥–Ω–µ–π."
            )
            return
        
        data = await state.get_data()
        current_num = data['current_childbirth']
        
        await state.update_data(**{f"hayd_after_{current_num}": duration})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ —Ä–æ–¥—ã
        if current_num < data['childbirth_count']:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–∏–º —Ä–æ–¥–∞–º
            await state.update_data(current_childbirth=current_num + 1)
            
            await message.answer(
                f"üìÖ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {current_num + 1}-—Ö —Ä–æ–¥–∞—Ö**\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É {current_num + 1}-—Ö —Ä–æ–¥–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:",
                parse_mode="Markdown"
            )
            await state.set_state(FemalePeriodsStates.entering_childbirth_date)
        else:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            await save_all_periods_info(message, state)
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

async def save_all_periods_info(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–∏–æ–¥–∞—Ö"""
    data = await state.get_data()
    user_id = message.from_user.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ö–∞–π–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    # –ü–µ—Ä–∏–æ–¥ 0 - –¥–æ –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤
    if 'hayd_before_1' in data:
        hayd_info = HaydInfo(
            user_id=user_id,
            average_duration=data['hayd_before_1'],
            period_number=0
        )
        await periods_repo.save_hayd_info(hayd_info)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥—ã—Ö —Ä–æ–¥–∞—Ö –∏ —Ö–∞–π–¥ –ø–æ—Å–ª–µ –Ω–∏—Ö
    for i in range(1, data['childbirth_count'] + 1):
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∏—Ñ–∞—Å
        nifas_info = NifasInfo(
            user_id=user_id,
            childbirth_number=i,
            childbirth_date=data[f'childbirth_date_{i}'],
            nifas_duration=data[f'nifas_duration_{i}']
        )
        await periods_repo.save_nifas_info(nifas_info)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö–∞–π–¥ –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤
        if f'hayd_after_{i}' in data:
            hayd_info = HaydInfo(
                user_id=user_id,
                average_duration=data[f'hayd_after_{i}'],
                period_number=i
            )
            await periods_repo.save_hayd_info(hayd_info)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await user_repo.update_user(
        telegram_id=user_id,
        has_childbirth=True,
        childbirth_count=data['childbirth_count']
    )
    
    await message.answer(
        "‚úÖ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!**\n\n"
        f"üìä –ó–∞–ø–∏—Å–∞–Ω–æ:\n"
        f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥–æ–≤: {data['childbirth_count']}\n"
        f"‚Ä¢ –ü–µ—Ä–∏–æ–¥—ã —Ö–∞–π–¥ –∏ –Ω–∏—Ñ–∞—Å —É—á—Ç–µ–Ω—ã\n\n"
        "–¢–µ–ø–µ—Ä—å —Ä–∞—Å—á–µ—Ç –Ω–∞–º–∞–∑–æ–≤ –∏ –ø–æ—Å—Ç–æ–≤ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Å —É—á–µ—Ç–æ–º —ç—Ç–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤.",
        parse_mode="Markdown"
    )
    
    await state.clear()