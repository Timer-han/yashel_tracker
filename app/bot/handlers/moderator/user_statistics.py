from aiogram import Router, F
from aiogram.types import Message

from ....core.services.statistics_service import StatisticsService
from ...filters.role_filter import moderator_filter

router = Router()
router.message.filter(moderator_filter)

statistics_service = StatisticsService()

@router.message(F.text == "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_global_statistics(message: Message):
    """–ü–æ–∫–∞–∑ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"""
    stats = await statistics_service.get_global_statistics()
    
    stats_text = (
        "üìà **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã**\n\n"
        f"üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** {stats['user_statistics']['total_registered']}\n\n"
    )
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—É
    gender_stats = stats['user_statistics']['by_gender']
    if gender_stats:
        stats_text += "**–ü–æ –ø–æ–ª—É:**\n"
        for gender, count in gender_stats.items():
            gender_text = "üë® –ú—É–∂—á–∏–Ω—ã" if gender == 'male' else "üë© –ñ–µ–Ω—â–∏–Ω—ã"
            stats_text += f"‚Ä¢ {gender_text}: {count}\n"
        stats_text += "\n"
    
    # –¢–æ–ø-5 –≥–æ—Ä–æ–¥–æ–≤
    city_stats = stats['user_statistics']['by_city']
    if city_stats:
        sorted_cities = sorted(city_stats.items(), key=lambda x: x[1], reverse=True)[:5]
        stats_text += "**–¢–æ–ø-5 –≥–æ—Ä–æ–¥–æ–≤:**\n"
        for city, count in sorted_cities:
            stats_text += f"‚Ä¢ üìç {city}: {count}\n"
        stats_text += "\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
    age_stats = stats['user_statistics']['by_age_group']
    if age_stats:
        stats_text += "**–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º:**\n"
        for age_group, count in age_stats.items():
            stats_text += f"‚Ä¢ {age_group} –ª–µ—Ç: {count}\n"
        stats_text += "\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–º–∞–∑–æ–≤
    if stats['prayer_statistics']:
        stats_text += "üïå **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–º–∞–∑–æ–≤:**\n\n"
        
        total_missed = sum(p['total_missed'] for p in stats['prayer_statistics'])
        total_completed = sum(p['total_completed'] for p in stats['prayer_statistics'])
        total_remaining = sum(p['total_remaining'] for p in stats['prayer_statistics'])
        
        stats_text += f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: **{total_missed:,}**\n"
        stats_text += f"‚úÖ –í–æ—Å–ø–æ–ª–Ω–µ–Ω–æ: **{total_completed:,}**\n"
        stats_text += f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: **{total_remaining:,}**\n\n"
        
        if total_missed > 0:
            progress = (total_completed / total_missed) * 100
            stats_text += f"üìà –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: **{progress:.1f}%**\n\n"
        
        stats_text += "**–ü–æ —Ç–∏–ø–∞–º –Ω–∞–º–∞–∑–æ–≤:**\n"
        for prayer_stat in stats['prayer_statistics']:
            from ....core.config import config
            prayer_name = config.PRAYER_TYPES.get(prayer_stat['prayer_type'], prayer_stat['prayer_type'])
            if prayer_stat['total_missed'] > 0:
                stats_text += f"‚Ä¢ {prayer_name}: {prayer_stat['total_remaining']:,} –æ—Å—Ç–∞–ª–æ—Å—å\n"
    
    await message.answer(stats_text, parse_mode="Markdown")
