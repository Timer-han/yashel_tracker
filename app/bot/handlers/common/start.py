from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from ...keyboards.user.main_menu import get_main_menu_keyboard, get_moderator_menu_keyboard, get_admin_menu_keyboard
from ...keyboards.user.registration import get_skip_name_keyboard
from ....core.services.user_service import UserService
from ....core.config import config
from ...states.registration import RegistrationStates

router = Router()
user_service = UserService()

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()
    
    user = await user_service.get_or_create_user(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        full_name=f"{message.from_user.first_name or ''} {message.from_user.last_name or ''}".strip() or None
    )
    
    if not user.is_registered:
        await message.answer(
            "üïå –ê—Å—Å–∞–ª—è–º—É –∞–ª–µ–π–∫—É–º! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ø—à–µ–ª –¢—Ä–µ–∫–µ—Ä!\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –Ω–∞–º–∞–∑–æ–≤.\n\n"
            "üìù –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n"
            "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? (–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ Telegram)",
            reply_markup=get_skip_name_keyboard()
        )
        await state.set_state(RegistrationStates.waiting_for_name)
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if user.role == config.Roles.ADMIN:
            keyboard = get_admin_menu_keyboard()
            welcome_text = "üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        elif user.role == config.Roles.MODERATOR:
            keyboard = get_moderator_menu_keyboard()  
            welcome_text = "üëÆ –ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"
        else:
            keyboard = get_main_menu_keyboard()
            welcome_text = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        
        await message.answer(
            f"üïå –ê—Å—Å–∞–ª—è–º—É –∞–ª–µ–π–∫—É–º, {user.full_name or user.username}!\n\n"
            f"{welcome_text}",
            reply_markup=keyboard
        )