import logging
from aiogram import Bot
from typing import List

from ..core.config import config
from ..core.database.repositories.user_repository import UserRepository
from ..core.services.prayer_service import PrayerService

logger = logging.getLogger(__name__)

async def send_daily_reminders():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    bot = Bot(token=config.BOT_TOKEN)
    user_repo = UserRepository()
    prayer_service = PrayerService()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await user_repo.get_all_registered_users()
        
        for user in users:
            try:
                stats = await prayer_service.get_user_statistics(user.telegram_id)
                
                if stats['total_remaining'] > 0:
                    message_text = (
                        f"üåô –î–æ–±—Ä–æ–π –Ω–æ—á–∏, {user.full_name or user.first_name}!\n\n"
                        f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
                        f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –≤–æ—Å–ø–æ–ª–Ω–∏—Ç—å: **{stats['total_remaining']}** –Ω–∞–º–∞–∑–æ–≤\n\n"
                        "ü§≤ –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –Ω–∞–º–∞–∑–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n"
                        "–ü—É—Å—Ç—å –ê–ª–ª–∞—Ö –æ–±–ª–µ–≥—á–∏—Ç –≤–∞–º —ç—Ç–æ—Ç –ø—É—Ç—å!"
                    )
                    
                    await bot.send_message(
                        chat_id=user.telegram_id,
                        text=message_text,
                        parse_mode="Markdown"
                    )
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}")
                continue
        
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {e}")
    finally:
        await bot.session.close()
